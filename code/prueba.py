import numpy as np

# Función para calcular RMSE
def calcular_rmse(y_true, y_pred):
    return np.sqrt(np.mean((y_true - y_pred)**2))

# Datos proporcionados
y_true = np.array([
    [ -6.8035717], [-24.979448 ], [-11.644167 ], [-23.481735 ], [ -2.5036142],
    [-15.951419 ], [-17.47609  ], [ -7.7132373], [-14.984759 ], [ -3.8876483],
    [ -8.903913 ], [-20.03605  ], [ -5.4755282], [ -9.009147 ], [ -9.54948  ],
    [ -7.860008 ], [ -6.629681 ], [ -9.318106 ], [-22.101875 ], [ -7.106958 ],
    [ -1.2786057], [-30.320778 ], [-12.681797 ], [ -8.170779 ], [-25.275442 ],
    [-13.790278 ], [ -3.988884 ], [ -9.935139 ], [ -6.9751525], [-12.933973 ]
])

y_pred = np.array([
    -6.80357123, -24.97944615, -11.64416765, -23.48173601,  -2.50361325,
   -15.95141733, -17.47609138,  -7.71323747, -14.98475639,  -3.88764736,
    -8.90391271, -20.03605441,  -5.47552754,  -9.00914635,  -9.54947942,
    -7.86000647,  -6.6296801 ,  -9.31810372, -22.101875  ,  -7.10695742,
    -1.27860489, -30.32077349, -12.68179535,  -8.17077979, -25.27544349,
   -13.79027716,  -3.98888276,  -9.93513784,  -6.97515049, -12.93397256
])

# Asegúrate de que y_true y y_pred tengan la misma forma
y_true = y_true.flatten()

# Calcular RMSE
rmse = calcular_rmse(y_true, y_pred)

print(f'RMSE: {rmse}')
